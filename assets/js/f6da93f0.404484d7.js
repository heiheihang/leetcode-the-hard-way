"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[4558],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,f=m["".concat(u,".").concat(d)]||m[d]||s[d]||o;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},25035:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return m}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),l=r(8539),i=["components"],u={description:"Author: @wingkwong | https://leetcode.com/problems/valid-perfect-square/"},p="0367 - Valid Perfect Square (Easy)",c={unversionedId:"0300-0399/valid-perfect-square-easy",id:"0300-0399/valid-perfect-square-easy",title:"0367 - Valid Perfect Square (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/valid-perfect-square/",source:"@site/solutions/0300-0399/0367-valid-perfect-square-easy.md",sourceDirName:"0300-0399",slug:"/0300-0399/valid-perfect-square-easy",permalink:"/leetcode-the-hard-way/solutions/0300-0399/valid-perfect-square-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/solutions/0300-0399/0367-valid-perfect-square-easy.md",tags:[],version:"current",sidebarPosition:367,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/valid-perfect-square/"},sidebar:"tutorialSidebar",previous:{title:"0365 - Water and Jug Problem (Medium)",permalink:"/leetcode-the-hard-way/solutions/0300-0399/water-and-jug-problem-medium"},next:{title:"0374 - Guess Number Higher or Lower (Easy)",permalink:"/leetcode-the-hard-way/solutions/0300-0399/guess-number-higher-or-lower-easy"}},s={},m=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Binary Search",id:"approach-1-binary-search",level:2}],d={toc:m};function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"0367---valid-perfect-square-easy"},"0367 - Valid Perfect Square (Easy)"),(0,o.kt)("h2",{id:"problem-link"},"Problem Link"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/valid-perfect-square/"},"https://leetcode.com/problems/valid-perfect-square/")),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"Given a ",(0,o.kt)("strong",{parentName:"p"},"positive")," integer ",(0,o.kt)("em",{parentName:"p"},"num"),", write a function which returns True if ",(0,o.kt)("em",{parentName:"p"},"num")," is a perfect square else False."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Follow up:")," ",(0,o.kt)("strong",{parentName:"p"},"Do not")," use any built-in library function such as ",(0,o.kt)("inlineCode",{parentName:"p"},"sqrt"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: num = 16\nOutput: true\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: num = 14\nOutput: false\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= num <= 2^31 - 1"))),(0,o.kt)("h2",{id:"approach-1-binary-search"},"Approach 1: Binary Search"),(0,o.kt)("p",null,"Prerequisite: ",(0,o.kt)("a",{parentName:"p",href:"../../tutorials/basic-topics/binary-search"},"Binary Search"),"."),(0,o.kt)(l.Z,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool isPerfectSquare(int num) {\n        // init possible range\n        // for num > 2, the range is actually [2 .. num / 2]\n        long long l = 1, r = num;\n        while (l < r) {\n            long long m = l + (r - l) / 2;\n            // exclude m\n            if (num > m * m) l = m + 1;\n            // include m\n            else r = m;\n        }\n        // check if it is a perfect square\n        return l * l == num;\n    }\n};\n")))}f.isMDXComponent=!0},8539:function(e,t,r){r.d(t,{Z:function(){return a}});var n=r(67294);function a(e){var t=e.name;return n.createElement("div",{className:"solution-author-wrapper"},n.createElement("span",null,"This solution is written by ",t))}}}]);