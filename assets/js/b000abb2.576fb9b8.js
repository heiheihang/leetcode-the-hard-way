"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[2166],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),c=p(n),h=r,d=c["".concat(l,".").concat(h)]||c[h]||u[h]||o;return n?i.createElement(d,a(a({ref:t},s),{},{components:n})):i.createElement(d,a({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=c;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m.mdxType="string"==typeof e?e:r,a[1]=m;for(var p=2;p<o;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2119:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return u}});var i=n(87462),r=n(63366),o=(n(67294),n(3905)),a=["components"],m={description:"Author: @heiheihang, @wingkwong | https://leetcode.com/problems/minimum-time-to-complete-trips/"},l="2187 - Minimum Time to Complete Trips (Medium)",p={unversionedId:"2100-2199/minimum-time-to-complete-trips-medium",id:"2100-2199/minimum-time-to-complete-trips-medium",title:"2187 - Minimum Time to Complete Trips (Medium)",description:"Author: @heiheihang, @wingkwong | https://leetcode.com/problems/minimum-time-to-complete-trips/",source:"@site/solutions/2100-2199/2187-minimum-time-to-complete-trips-medium.md",sourceDirName:"2100-2199",slug:"/2100-2199/minimum-time-to-complete-trips-medium",permalink:"/leetcode-the-hard-way/solutions/2100-2199/minimum-time-to-complete-trips-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/solutions/2100-2199/2187-minimum-time-to-complete-trips-medium.md",tags:[],version:"current",sidebarPosition:2187,frontMatter:{description:"Author: @heiheihang, @wingkwong | https://leetcode.com/problems/minimum-time-to-complete-trips/"},sidebar:"tutorialSidebar",previous:{title:"2186 - Minimum Number of Steps to Make Two Strings Anagram II (Medium)",permalink:"/leetcode-the-hard-way/solutions/2100-2199/minimum-number-of-steps-to-make-two-strings-anagram-ii-medium"},next:{title:"2188 - Minimum Time to Finish the Race (Hard)",permalink:"/leetcode-the-hard-way/solutions/2100-2199/minimum-time-to-finish-the-race-hard"}},s={},u=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Binary Search",id:"approach-1-binary-search",level:2},{value:"Python3 (By @heiheihang)",id:"python3-by-heiheihang",level:3},{value:"C++ (By @wingkwong)",id:"c-by-wingkwong",level:3}],c={toc:u};function h(e){var t=e.components,n=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2187---minimum-time-to-complete-trips-medium"},"2187 - Minimum Time to Complete Trips (Medium)"),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"You are given an array ",(0,o.kt)("inlineCode",{parentName:"p"},"time")," where ",(0,o.kt)("inlineCode",{parentName:"p"},"time[i]")," denotes the time taken by the ",(0,o.kt)("inlineCode",{parentName:"p"},"ith")," bus to complete ",(0,o.kt)("strong",{parentName:"p"},"one trip"),"."),(0,o.kt)("p",null,"Each bus can make multiple trips ",(0,o.kt)("strong",{parentName:"p"},"successively"),"; that is, the next trip can start ",(0,o.kt)("strong",{parentName:"p"},"immediately after")," completing the current trip. Also, each bus operates ",(0,o.kt)("strong",{parentName:"p"},"independently"),"; that is, the trips of one bus do not influence the trips of any other bus."),(0,o.kt)("p",null,"You are also given an integer ",(0,o.kt)("inlineCode",{parentName:"p"},"totalTrips"),", which denotes the number of trips all buses should make ",(0,o.kt)("strong",{parentName:"p"},"in total"),". Return ","_","the ",(0,o.kt)("strong",{parentName:"p"},"minimum time")," required for all buses to complete ",(0,o.kt)("strong",{parentName:"p"},"at least")," ","_"," ",(0,o.kt)("inlineCode",{parentName:"p"},"totalTrips")," ",(0,o.kt)("em",{parentName:"p"},"trips"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: time = [1,2,3], totalTrips = 5\nOutput: 3\nExplanation:\n- At time t = 1, the number of trips completed by each bus are [1,0,0]. \n  The total number of trips completed is 1 + 0 + 0 = 1.\n- At time t = 2, the number of trips completed by each bus are [2,1,0]. \n  The total number of trips completed is 2 + 1 + 0 = 3.\n- At time t = 3, the number of trips completed by each bus are [3,1,1]. \n  The total number of trips completed is 3 + 1 + 1 = 5.\nSo the minimum time needed for all buses to complete at least 5 trips is 3.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: time = [2], totalTrips = 1\nOutput: 2\nExplanation:\nThere is only one bus, and it will complete its first trip at t = 2.\nSo the minimum time needed to complete 1 trip is 2. \n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= time.length <= 10^5")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= time[i], totalTrips <= 10^7"))),(0,o.kt)("h2",{id:"approach-1-binary-search"},"Approach 1: Binary Search"),(0,o.kt)("p",null,"This is a classic problem of finding the smallest integer given a bound under a monotonic function."),(0,o.kt)("p",null,"We can perform binary search on the ",(0,o.kt)("inlineCode",{parentName:"p"},"time")," needed to finish the trips, and we check that if we are able to complete ",(0,o.kt)("inlineCode",{parentName:"p"},"totalTrips")," within the given amount of time. There are two components to this solution:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Binary Searching the smallest amount of time"),(0,o.kt)("li",{parentName:"ul"},"Checking if ",(0,o.kt)("inlineCode",{parentName:"li"},"totalTrips")," can be completed given a time")),(0,o.kt)("p",null,"There are many similar problems to this question, and you should know this: ",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/discuss/general-discussion/786126/python-powerful-ultimate-binary-search-template-solved-many-problems"},"https://leetcode.com/discuss/general-discussion/786126/python-powerful-ultimate-binary-search-template-solved-many-problems")),(0,o.kt)("h3",{id:"python3-by-heiheihang"},"Python3 (By @heiheihang)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def minimumTime(self, time: List[int], totalTrips: int) -> int:\n        \n        #checker function\n        def check(x):\n            nonlocal totalTrips\n            \n            #keep track of how many trips we have visited\n            trips = 0\n            for t in time:\n            \n                #we can visit x//t trips (rounded down)\n                trips += x // t\n                \n                #return true when we have fulfilled the requirement\n                if(trips >= totalTrips):\n                    return True\n            #return false if the requirement has not been fulfilled\n            return False\n        \n        #standard binary search setting of left pointer and right pointer\n        lp = 0\n        rp = time[0] * totalTrips + 1\n        res = rp\n        \n        while(lp <= rp):\n            \n            #standard middle point of binary search\n            mid = (lp+rp) // 2\n            \n            #check if the middle point satisfies the requirement\n            if(check(mid)):\n                #if it satisfies, update the result\n                #also decrease the right pointer to look at smaller times\n                res = mid\n                rp = mid - 1\n            else:\n                #increase the left pointer to look at bigger times otherwise\n                lp = mid + 1\n                \n        return res\n")),(0,o.kt)("h3",{id:"c-by-wingkwong"},"C++ (By @wingkwong)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    long long minimumTime(vector<int>& time, int totalTrips) {\n        long long l = *min_element(time.begin(), time.end());\n        long long r = accumulate(time.begin(), time.end(), 0LL) * totalTrips;\n        while (l < r) {\n            long long m = l + (r - l) / 2, trips = 0;\n            for (auto x : time) trips += (m / x);\n            if (trips < totalTrips) l = m + 1;\n            else r = m;\n        }\n        return l;\n    }\n};\n")))}h.isMDXComponent=!0}}]);