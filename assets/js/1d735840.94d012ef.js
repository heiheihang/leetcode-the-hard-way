"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[1665],{3905:function(n,e,t){t.d(e,{Zo:function(){return s},kt:function(){return d}});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var l=r.createContext({}),p=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):u(u({},e),n)),t},s=function(n){var e=p(n.components);return r.createElement(l.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,l=n.parentName,s=o(n,["components","mdxType","originalType","parentName"]),c=p(t),d=a,h=c["".concat(l,".").concat(d)]||c[d]||m[d]||i;return t?r.createElement(h,u(u({ref:e},s),{},{components:t})):r.createElement(h,u({ref:e},s))}));function d(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,u=new Array(i);u[0]=c;var o={};for(var l in e)hasOwnProperty.call(e,l)&&(o[l]=e[l]);o.originalType=n,o.mdxType="string"==typeof n?n:a,u[1]=o;for(var p=2;p<i;p++)u[p]=t[p];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},96472:function(n,e,t){t.r(e),t.d(e,{assets:function(){return s},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return m}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),u=["components"],o={description:"Author: @heiheihang, @wingkwong | https://leetcode.com/problems/running-sum-of-1d-array/"},l="1480 - Running Sum of 1d Array (Easy)",p={unversionedId:"1400-1499/running-sum-of-1d-array-easy",id:"1400-1499/running-sum-of-1d-array-easy",title:"1480 - Running Sum of 1d Array (Easy)",description:"Author: @heiheihang, @wingkwong | https://leetcode.com/problems/running-sum-of-1d-array/",source:"@site/solutions/1400-1499/1480-running-sum-of-1d-array-easy.md",sourceDirName:"1400-1499",slug:"/1400-1499/running-sum-of-1d-array-easy",permalink:"/leetcode-the-hard-way/solutions/1400-1499/running-sum-of-1d-array-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/solutions/1400-1499/1480-running-sum-of-1d-array-easy.md",tags:[],version:"current",sidebarPosition:1480,frontMatter:{description:"Author: @heiheihang, @wingkwong | https://leetcode.com/problems/running-sum-of-1d-array/"},sidebar:"tutorialSidebar",previous:{title:"1475 - Final Prices With a Special Discount in a Shop (Easy)",permalink:"/leetcode-the-hard-way/solutions/1400-1499/final-prices-with-a-special-discount-in-a-shop-easy"},next:{title:"1491 - Average Salary Excluding the Minimum and Maximum Salary (Easy)",permalink:"/leetcode-the-hard-way/solutions/1400-1499/average-salary-excluding-the-minimum-and-maximum-salary-easy"}},s={},m=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Iteration",id:"approach-1-iteration",level:2},{value:"Approach 2: Partial Sum",id:"approach-2-partial-sum",level:2},{value:"Approach 3: In-place Modification",id:"approach-3-in-place-modification",level:2}],c={toc:m};function d(n){var e=n.components,t=(0,a.Z)(n,u);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"1480---running-sum-of-1d-array-easy"},"1480 - Running Sum of 1d Array (Easy)"),(0,i.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,i.kt)("p",null,"Given an array ",(0,i.kt)("inlineCode",{parentName:"p"},"nums"),". We define a running sum of an array as ",(0,i.kt)("inlineCode",{parentName:"p"},"runningSum[i] = sum(nums[0]\u2026nums[i])"),"."),(0,i.kt)("p",null,"Return the running sum of ",(0,i.kt)("inlineCode",{parentName:"p"},"nums"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 1:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: nums = [1,2,3,4]\nOutput: [1,3,6,10]\nExplanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 2:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: nums = [1,1,1,1,1]\nOutput: [1,2,3,4,5]\nExplanation: Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 3:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: nums = [3,1,2,10,1]\nOutput: [3,4,6,16,17] \n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Constraints:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 1000")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-10^6 <= nums[i] <= 10^6"))),(0,i.kt)("h2",{id:"approach-1-iteration"},"Approach 1: Iteration"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Prepared by @heiheihang")),(0,i.kt)("p",null,"We need to define an accumulator (",(0,i.kt)("inlineCode",{parentName:"p"},"running_sum")," in this problem) to save the sum of all numbers in ",(0,i.kt)("inlineCode",{parentName:"p"},"nums"),". After calculating the latest ",(0,i.kt)("inlineCode",{parentName:"p"},"running_sum"),", we put that number to our result list."),(0,i.kt)("p",null,"The trick here is that we need to add the number from ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"running_sum")," first before adding ",(0,i.kt)("inlineCode",{parentName:"p"},"running_sum")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"result"),". This is because the ",(0,i.kt)("inlineCode",{parentName:"p"},"ith")," position from ",(0,i.kt)("inlineCode",{parentName:"p"},"result")," should include the ",(0,i.kt)("inlineCode",{parentName:"p"},"ith")," number in ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," ."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def runningSum(self, nums: List[int]) -> List[int]:\n        \n        #initialize the running_sum\n        running_sum = 0\n        \n        #initialize the result list\n        result = []\n        \n        #we iterage each number in nums\n        for i in range(len(nums)):\n            \n            #the current number is defined by nums[i]\n            current_number = nums[i]\n            \n            #add the current_number to running_sum\n            running_sum += current_number\n            \n            #add the running_sum to the result list\n            result.append(running_sum)\n        \n        #return result\n        return result\n")),(0,i.kt)("h2",{id:"approach-2-partial-sum"},"Approach 2: Partial Sum"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Prepared by @wingkwong")),(0,i.kt)("p",null,"Using C++ STL."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> runningSum(vector<int>& nums) {\n        partial_sum(nums.begin(), nums.end(), nums.begin());\n        return nums;\n    }\n};\n")),(0,i.kt)("h2",{id:"approach-3-in-place-modification"},"Approach 3: In-place Modification"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Prepared by @wingkwong")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> runningSum(vector<int>& nums) {\n        for(int i = 1; i < nums.size(); i++) {\n            // add the previous result to the current element.\n            nums[i] += nums[i - 1];\n        }\n        return nums;\n    }\n};\n")))}d.isMDXComponent=!0}}]);