"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[6050],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,k=c["".concat(i,".").concat(d)]||c[d]||u[d]||o;return n?a.createElement(k,s(s({ref:t},m),{},{components:n})):a.createElement(k,s({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=c;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9229:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),s=["components"],l={description:"Author: @wingkwong | https://leetcode.com/problems/a-number-after-a-double-reversal/"},i="2119 - A Number After a Double Reversal (Easy)",p={unversionedId:"2100-2199/a-number-after-a-double-reversal-easy",id:"2100-2199/a-number-after-a-double-reversal-easy",title:"2119 - A Number After a Double Reversal (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/a-number-after-a-double-reversal/",source:"@site/solutions/2100-2199/2119-a-number-after-a-double-reversal-easy.md",sourceDirName:"2100-2199",slug:"/2100-2199/a-number-after-a-double-reversal-easy",permalink:"/leetcode-the-hard-way/solutions/2100-2199/a-number-after-a-double-reversal-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/solutions/2100-2199/2119-a-number-after-a-double-reversal-easy.md",tags:[],version:"current",sidebarPosition:2119,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/a-number-after-a-double-reversal/"},sidebar:"tutorialSidebar",previous:{title:"2111 - Minimum Operations to Make the Array K-Increasing (Hard)",permalink:"/leetcode-the-hard-way/solutions/2100-2199/minimum-operations-to-make-the-array-k-increasing-hard"},next:{title:"2120 - Execution of All Suffix Instructions Staying in a Grid (Medium)",permalink:"/leetcode-the-hard-way/solutions/2100-2199/execution-of-all-suffix-instructions-staying-in-a-grid-medium"}},m={},u=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Just do what it says",id:"approach-1-just-do-what-it-says",level:2},{value:"C++",id:"c",level:3},{value:"Approach 2: Check Trailing Zero",id:"approach-2-check-trailing-zero",level:2},{value:"C++",id:"c-1",level:3}],c={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2119---a-number-after-a-double-reversal-easy"},"2119 - A Number After a Double Reversal (Easy)"),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Reversing")," an integer means to reverse all its digits."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"For example, reversing ",(0,o.kt)("inlineCode",{parentName:"li"},"2021")," gives ",(0,o.kt)("inlineCode",{parentName:"li"},"1202"),". Reversing ",(0,o.kt)("inlineCode",{parentName:"li"},"12300")," gives ",(0,o.kt)("inlineCode",{parentName:"li"},"321")," as the ",(0,o.kt)("strong",{parentName:"li"},"leading zeros are not retained"),".")),(0,o.kt)("p",null,"Given an integer ",(0,o.kt)("inlineCode",{parentName:"p"},"num"),", ",(0,o.kt)("strong",{parentName:"p"},"reverse")," ",(0,o.kt)("inlineCode",{parentName:"p"},"num")," to get ",(0,o.kt)("inlineCode",{parentName:"p"},"reversed1"),", ",(0,o.kt)("strong",{parentName:"p"},"then reverse")," ",(0,o.kt)("inlineCode",{parentName:"p"},"reversed1")," to get ",(0,o.kt)("inlineCode",{parentName:"p"},"reversed2"),". Return ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," ",(0,o.kt)("em",{parentName:"p"},"if")," ",(0,o.kt)("inlineCode",{parentName:"p"},"reversed2")," ",(0,o.kt)("em",{parentName:"p"},"equals")," ",(0,o.kt)("inlineCode",{parentName:"p"},"num"),". Otherwise return ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: num = 526\nOutput: true\nExplanation: Reverse num to get 625, then reverse 625 to get 526, which equals num.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: num = 1800\nOutput: false\nExplanation: Reverse num to get 81, then reverse 81 to get 18, which does not equal num.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 3:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: num = 0\nOutput: true\nExplanation: Reverse num to get 0, then reverse 0 to get 0, which equals num.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"0 <= num <= 106"))),(0,o.kt)("h2",{id:"approach-1-just-do-what-it-says"},"Approach 1: Just do what it says"),(0,o.kt)("h3",{id:"c"},"C++"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool isSameAfterReversals(int num) {\n        if (num == 0) return 1;\n        string s = to_string(num);\n        int n = s.size(), j = 0;\n        while (s[n - 1 - j] == '0') j++;\n        string t = s.substr(0, n - j);\n        return s == t;\n    }\n};\n")),(0,o.kt)("h2",{id:"approach-2-check-trailing-zero"},"Approach 2: Check Trailing Zero"),(0,o.kt)("p",null,"However, a better way to solve this is to check if there is any trailing zero. No matter how many zeros at the end, after removing them all, it won't be same if you reverse it. The only exceptional case is ",(0,o.kt)("span",{parentName:"p",className:"math math-inline"},(0,o.kt)("span",{parentName:"span",className:"katex"},(0,o.kt)("span",{parentName:"span",className:"katex-mathml"},(0,o.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,o.kt)("semantics",{parentName:"math"},(0,o.kt)("mrow",{parentName:"semantics"},(0,o.kt)("mi",{parentName:"mrow"},"n"),(0,o.kt)("mi",{parentName:"mrow"},"u"),(0,o.kt)("mi",{parentName:"mrow"},"m"),(0,o.kt)("mo",{parentName:"mrow"},"="),(0,o.kt)("mn",{parentName:"mrow"},"0")),(0,o.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"num=0")))),(0,o.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"0.4306em"}}),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"u"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,o.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,o.kt)("span",{parentName:"span",className:"mrel"},"="),(0,o.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,o.kt)("span",{parentName:"span",className:"mord"},"0"))))),"."),(0,o.kt)("h3",{id:"c-1"},"C++"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool isSameAfterReversals(int num) {\n        return num == 0 || num % 10;\n    }\n};\n")),(0,o.kt)("p",null,"Time Complexity : O(1)\\\nSpace Complexity: O(1)"))}d.isMDXComponent=!0}}]);