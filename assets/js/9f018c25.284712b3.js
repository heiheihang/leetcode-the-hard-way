"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[7446],{3905:function(e,a,t){t.d(a,{Zo:function(){return l},kt:function(){return k}});var n=t(67294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function m(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=n.createContext({}),o=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):m(m({},a),e)),t},l=function(e){var a=o(e.components);return n.createElement(i.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},N=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),N=o(t),k=s,u=N["".concat(i,".").concat(k)]||N[k]||c[k]||r;return t?n.createElement(u,m(m({ref:a},l),{},{components:t})):n.createElement(u,m({ref:a},l))}));function k(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=t.length,m=new Array(r);m[0]=N;var p={};for(var i in a)hasOwnProperty.call(a,i)&&(p[i]=a[i]);p.originalType=e,p.mdxType="string"==typeof e?e:s,m[1]=p;for(var o=2;o<r;o++)m[o]=t[o];return n.createElement.apply(null,m)}return n.createElement.apply(null,t)}N.displayName="MDXCreateElement"},6059:function(e,a,t){t.r(a),t.d(a,{assets:function(){return l},contentTitle:function(){return i},default:function(){return k},frontMatter:function(){return p},metadata:function(){return o},toc:function(){return c}});var n=t(87462),s=t(63366),r=(t(67294),t(3905)),m=["components"],p={description:"Author: @wingkwong | https://leetcode.com/problems/counting-bits/"},i="0338 - Counting Bits (Easy)",o={unversionedId:"0300-0399/counting-bits-easy",id:"0300-0399/counting-bits-easy",title:"0338 - Counting Bits (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/counting-bits/",source:"@site/solutions/0300-0399/0338-counting-bits-easy.md",sourceDirName:"0300-0399",slug:"/0300-0399/counting-bits-easy",permalink:"/leetcode-the-hard-way/solutions/0300-0399/counting-bits-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/solutions/0300-0399/0338-counting-bits-easy.md",tags:[],version:"current",sidebarPosition:338,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/counting-bits/"},sidebar:"tutorialSidebar",previous:{title:"0334 - Increasing Triplet Subsequence (Medium)",permalink:"/leetcode-the-hard-way/solutions/0300-0399/increasing-triplet-subsequence-medium"},next:{title:"0344 - Reverse String (Easy)",permalink:"/leetcode-the-hard-way/solutions/0300-0399/reverse-string-easy"}},l={},c=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: (n + 1) hammingWeight",id:"approach-1-n--1-hammingweight",level:2},{value:"Approach 2: One Pass",id:"approach-2-one-pass",level:2}],N={toc:c};function k(e){var a=e.components,t=(0,s.Z)(e,m);return(0,r.kt)("wrapper",(0,n.Z)({},N,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"0338---counting-bits-easy"},"0338 - Counting Bits (Easy)"),(0,r.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,r.kt)("p",null,"Given an integer ",(0,r.kt)("inlineCode",{parentName:"p"},"n"),", return ",(0,r.kt)("em",{parentName:"p"},"an array")," ",(0,r.kt)("inlineCode",{parentName:"p"},"ans")," ",(0,r.kt)("em",{parentName:"p"},"of length")," ",(0,r.kt)("inlineCode",{parentName:"p"},"n + 1")," ",(0,r.kt)("em",{parentName:"p"},"such that for each")," ",(0,r.kt)("inlineCode",{parentName:"p"},"i")," _",(0,r.kt)("em",{parentName:"p"}," (",(0,r.kt)("inlineCode",{parentName:"em"},"0 <= i <= n"),")"),",",(0,r.kt)("em",{parentName:"p"}," ",(0,r.kt)("inlineCode",{parentName:"em"},"ans[i]")," _is the ",(0,r.kt)("strong",{parentName:"em"},"number of"))," ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"'s")," in the binary representation of")," ",(0,r.kt)("inlineCode",{parentName:"p"},"i"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 1:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: n = 2\nOutput: [0,1,1]\nExplanation:\n0 --\x3e 0\n1 --\x3e 1\n2 --\x3e 10\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 2:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: n = 5\nOutput: [0,1,1,2,1,2]\nExplanation:\n0 --\x3e 0\n1 --\x3e 1\n2 --\x3e 10\n3 --\x3e 11\n4 --\x3e 100\n5 --\x3e 101 \n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constraints:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"0 <= n <= 10^5"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Follow up:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"It is very easy to come up with a solution with a runtime of ",(0,r.kt)("inlineCode",{parentName:"li"},"O(n log n)"),". Can you do it in linear time ",(0,r.kt)("inlineCode",{parentName:"li"},"O(n)")," and possibly in a single pass?"),(0,r.kt)("li",{parentName:"ul"},"Can you do it without using any built-in function (i.e., like ",(0,r.kt)("inlineCode",{parentName:"li"},"__builtin_popcount")," in C++)?")),(0,r.kt)("h2",{id:"approach-1-n--1-hammingweight"},"Approach 1: (n + 1) hammingWeight"),(0,r.kt)("p",null,"If you've solved ",(0,r.kt)("a",{parentName:"p",href:"../0100-0199/number-of-1-bits-easy"},"0191 - Number of 1 Bits (Easy)"),", then you can use that solution in this problem. The time complexity is ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mi",{parentName:"mrow"},"l"),(0,r.kt)("mi",{parentName:"mrow"},"o"),(0,r.kt)("mi",{parentName:"mrow"},"g"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n logn)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.01968em"}},"l"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"o"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03588em"}},"g"),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"))))),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    // Check out 0191 - Number of 1 Bits (Easy) - Approach 3 \n    // for detailed explanation\n    int hammingWeight(int n) {\n        int ans = 0;\n        for (; n; n = n & (n - 1)) ans++;\n        return ans;\n    }\n    \n    vector<int> countBits(int n) {\n        vector<int> ans;\n        for (int i = 0; i <= n; i++) {\n            ans.push_back(hammingWeight(i));\n        }\n        return ans;\n    }\n};\n")),(0,r.kt)("h2",{id:"approach-2-one-pass"},"Approach 2: One Pass"),(0,r.kt)("p",null,(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex-error",title:"ParseError: KaTeX parse error: Expected 'EOF', got '&' at position 3: i &\u0332 (i - 1)",style:{color:"#cc0000"}},"i & (i - 1)"))," is a common trick to turn the rightmost set bit to ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"0")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"0")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"0"))))),". For example, if ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"i"),(0,r.kt)("mo",{parentName:"mrow"},"="),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mn",{parentName:"mrow"},"1000100"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mo",{parentName:"msub",stretchy:"false"},")"),(0,r.kt)("mn",{parentName:"msub"},"2"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"i = (1000100)_2")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6595em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"="),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},"1000100"),(0,r.kt)("span",{parentName:"span",className:"mclose"},(0,r.kt)("span",{parentName:"span",className:"mclose"},")"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))))))),", then ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex-error",title:"ParseError: KaTeX parse error: Expected 'EOF', got '&' at position 3: i &\u0332 (i - 1)",style:{color:"#cc0000"}},"i & (i - 1)"))," would be ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mn",{parentName:"mrow"},"1000000"),(0,r.kt)("msub",{parentName:"mrow"},(0,r.kt)("mo",{parentName:"msub",stretchy:"false"},")"),(0,r.kt)("mn",{parentName:"msub"},"2"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(1000000)_2")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},"1000000"),(0,r.kt)("span",{parentName:"span",className:"mclose"},(0,r.kt)("span",{parentName:"span",className:"mclose"},")"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,r.kt)("span",{parentName:"span"})))))))))),". We can iterate each number and calculate the number of 1s by adding 1 from the previous state."),(0,r.kt)("p",null,"The transition function is simply  ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex-error",title:"ParseError: KaTeX parse error: Expected 'EOF', got '&' at position 16: ans[i] = ans[i &\u0332 (i - 1)] + 1",style:{color:"#cc0000"}},"ans[i] = ans[i & (i - 1)] + 1")),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> countBits(int num) {\n        vector<int> ans(num + 1, 0);\n        for(int i = 1; i <= num; i++) {\n            // no. of 1s in (1000100) = no. of 1s in (1000000) + 1\n            ans[i] = ans[i & (i - 1)] + 1;\n        }\n        return ans; \n    }\n};\n")))}k.isMDXComponent=!0}}]);