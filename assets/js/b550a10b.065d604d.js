"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[1473],{3905:function(e,t,a){a.d(t,{Zo:function(){return l},kt:function(){return u}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),h=p(a),u=r,d=h["".concat(m,".").concat(u)]||h[u]||c[u]||i;return a?n.createElement(d,s(s({ref:t},l),{},{components:a})):n.createElement(d,s({ref:t},l))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=h;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},95780:function(e,t,a){a.r(t),a.d(t,{assets:function(){return l},contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),s=["components"],o={description:"Author: @wingkwong | https://leetcode.com/problems/largest-combination-with-bitwise-and-greater-than-zero"},m="2275 - Largest Combination With Bitwise AND Greater Than Zero (Medium)",p={unversionedId:"2200-2299/largest-combination-with-bitwise-and-greater-than-zero-medium",id:"2200-2299/largest-combination-with-bitwise-and-greater-than-zero-medium",title:"2275 - Largest Combination With Bitwise AND Greater Than Zero (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/largest-combination-with-bitwise-and-greater-than-zero",source:"@site/solutions/2200-2299/2275-largest-combination-with-bitwise-and-greater-than-zero-medium.md",sourceDirName:"2200-2299",slug:"/2200-2299/largest-combination-with-bitwise-and-greater-than-zero-medium",permalink:"/leetcode-the-hard-way/solutions/2200-2299/largest-combination-with-bitwise-and-greater-than-zero-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/solutions/2200-2299/2275-largest-combination-with-bitwise-and-greater-than-zero-medium.md",tags:[],version:"current",sidebarPosition:2275,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/largest-combination-with-bitwise-and-greater-than-zero"},sidebar:"tutorialSidebar",previous:{title:"2274 - Maximum Consecutive Floors Without Special Floors (Medium)",permalink:"/leetcode-the-hard-way/solutions/2200-2299/maximum-consecutive-floors-without-special-floors-medium"},next:{title:"2276 - Count Integers in Intervals (Hard)",permalink:"/leetcode-the-hard-way/solutions/2200-2299/count-integers-in-intervals-hard"}},l={},c=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Counting",id:"approach-1-counting",level:2}],h={toc:c};function u(e){var t=e.components,a=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"2275---largest-combination-with-bitwise-and-greater-than-zero-medium"},"2275 - Largest Combination With Bitwise AND Greater Than Zero (Medium)"),(0,i.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"bitwise AND")," of an array ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," is the bitwise AND of all integers in ",(0,i.kt)("inlineCode",{parentName:"p"},"nums"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For example, for ",(0,i.kt)("inlineCode",{parentName:"li"},"nums = [1, 5, 3]"),", the bitwise AND is equal to ",(0,i.kt)("inlineCode",{parentName:"li"},"1 & 5 & 3 = 1"),"."),(0,i.kt)("li",{parentName:"ul"},"Also, for ",(0,i.kt)("inlineCode",{parentName:"li"},"nums = [7]"),", the bitwise AND is ",(0,i.kt)("inlineCode",{parentName:"li"},"7"),".")),(0,i.kt)("p",null,"You are given an array of positive integers ",(0,i.kt)("inlineCode",{parentName:"p"},"candidates"),". Evaluate the ",(0,i.kt)("strong",{parentName:"p"},"bitwise AND")," of every ",(0,i.kt)("strong",{parentName:"p"},"combination")," of numbers of ",(0,i.kt)("inlineCode",{parentName:"p"},"candidates"),". Each number in ",(0,i.kt)("inlineCode",{parentName:"p"},"candidates")," may only be used ",(0,i.kt)("strong",{parentName:"p"},"once")," in each combination."),(0,i.kt)("p",null,"Return ",(0,i.kt)("em",{parentName:"p"},"the size of the ",(0,i.kt)("strong",{parentName:"em"},"largest")," combination of")," ",(0,i.kt)("inlineCode",{parentName:"p"},"candidates")," ",(0,i.kt)("em",{parentName:"p"},"with a bitwise AND ",(0,i.kt)("strong",{parentName:"em"},"greater")," than")," ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 1:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: candidates = [16,17,71,62,12,24,14]\nOutput: 4\nExplanation: The combination [16,17,62,24] has a bitwise AND of 16 & 17 & 62 & 24 = 16 > 0.\nThe size of the combination is 4.\nIt can be shown that no combination with a size greater than 4 has a bitwise AND greater than 0.\nNote that more than one combination may have the largest size.\nFor example, the combination [62,12,24,14] has a bitwise AND of 62 & 12 & 24 & 14 = 8 > 0.\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 2:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: candidates = [8,8]\nOutput: 2\nExplanation: The largest combination [8,8] has a bitwise AND of 8 & 8 = 8 > 0.\nThe size of the combination is 2, so we return 2.\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Constraints:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= candidates.length <= 10^5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= candidates[i] <= 10^7"))),(0,i.kt)("h2",{id:"approach-1-counting"},"Approach 1: Counting"),(0,i.kt)("p",null,"If the ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"i")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"i")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6595em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"))))),"-th bit is set after performing AND operation on ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"k")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k")))))," candidates, it means the ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"i")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"i")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6595em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"))))),"-th of all ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"k")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"k")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.03148em"}},"k")))))," candidates must be 1. Therefore, we check each bit to see which bit has the most candidates with the bit set. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int largestCombination(vector<int>& candidates) {\n        int n = candidates.size(), ans = 0;\n        for (int i = 0; i < 32; i++) {\n            // init bits to  0 for each index\n            int bits = 0;\n            // iterate each candidate\n            for (int j = 0; j < n; j++) {\n                // i-th bit is set for candidates[j]\n                if ((1 << i) & candidates[j]) {\n                    // count the bit\n                    bits += 1;\n                }\n            }\n            // update the ans \n            ans = max(ans, bits);\n        }\n        return ans;\n    }\n};\n")))}u.isMDXComponent=!0}}]);