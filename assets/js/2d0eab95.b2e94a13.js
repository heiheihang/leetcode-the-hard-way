"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[6320],{2307:function(t){t.exports=JSON.parse('{"pluginId":"tutorials","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Tutorials","href":"/leetcode-the-hard-way/tutorials/","docId":"index"},{"type":"category","label":"Basic Topics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arrays","href":"/leetcode-the-hard-way/tutorials/basic-topics/arrays","docId":"basic-topics/arrays"},{"type":"link","label":"Backtracking","href":"/leetcode-the-hard-way/tutorials/basic-topics/backtracking","docId":"basic-topics/backtracking"},{"type":"link","label":"Binary Search","href":"/leetcode-the-hard-way/tutorials/basic-topics/binary-search","docId":"basic-topics/binary-search"},{"type":"link","label":"Hash Map","href":"/leetcode-the-hard-way/tutorials/basic-topics/hash-map","docId":"basic-topics/hash-map"},{"type":"link","label":"Heap","href":"/leetcode-the-hard-way/tutorials/basic-topics/heap","docId":"basic-topics/heap"},{"type":"link","label":"Queue & Stack","href":"/leetcode-the-hard-way/tutorials/basic-topics/queue-and-stack","docId":"basic-topics/queue-and-stack"},{"type":"link","label":"Sliding Window","href":"/leetcode-the-hard-way/tutorials/basic-topics/sliding-window","docId":"basic-topics/sliding-window"},{"type":"link","label":"Sorting","href":"/leetcode-the-hard-way/tutorials/basic-topics/sorting","docId":"basic-topics/sorting"},{"type":"link","label":"Time Complexity","href":"/leetcode-the-hard-way/tutorials/basic-topics/time-complexity","docId":"basic-topics/time-complexity"},{"type":"link","label":"Trie","href":"/leetcode-the-hard-way/tutorials/basic-topics/trie","docId":"basic-topics/trie"},{"type":"link","label":"Two Pointers","href":"/leetcode-the-hard-way/tutorials/basic-topics/two-pointers","docId":"basic-topics/two-pointers"}],"href":"/leetcode-the-hard-way/tutorials/basic-topics/"},{"type":"link","label":"Bit Manipulation","href":"/leetcode-the-hard-way/tutorials/bit-masking","docId":"bit-masking"},{"type":"link","label":"Dynamic Programming","href":"/leetcode-the-hard-way/tutorials/dynamic-programming","docId":"dynamic-programming"},{"type":"category","label":"Graph Theory","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Bellman Ford Algorithm","href":"/leetcode-the-hard-way/tutorials/graph-theory/bellman-ford-algorithm","docId":"graph-theory/bellman-ford-algorithm"},{"type":"link","label":"Binary Search Tree","href":"/leetcode-the-hard-way/tutorials/graph-theory/binary-search-tree","docId":"graph-theory/binary-search-tree"},{"type":"link","label":"Binary Tree","href":"/leetcode-the-hard-way/tutorials/graph-theory/binary-tree","docId":"graph-theory/binary-tree"},{"type":"link","label":"Breadth First Search","href":"/leetcode-the-hard-way/tutorials/graph-theory/breadth-first-search","docId":"graph-theory/breadth-first-search"},{"type":"link","label":"Depth First Search","href":"/leetcode-the-hard-way/tutorials/graph-theory/depth-first-search","docId":"graph-theory/depth-first-search"},{"type":"link","label":"Dijkstra\'s Algorithm","href":"/leetcode-the-hard-way/tutorials/graph-theory/dijkstra","docId":"graph-theory/dijkstra"},{"type":"link","label":"Disjoint Set","href":"/leetcode-the-hard-way/tutorials/graph-theory/disjoint-set","docId":"graph-theory/disjoint-set"},{"type":"link","label":"Introduction","href":"/leetcode-the-hard-way/tutorials/graph-theory/introduction","docId":"graph-theory/introduction"},{"type":"link","label":"Kahn\'s Algorithm","href":"/leetcode-the-hard-way/tutorials/graph-theory/kahns-algorithm","docId":"graph-theory/kahns-algorithm"},{"type":"link","label":"Kruskal\'s Algorithm","href":"/leetcode-the-hard-way/tutorials/graph-theory/kruskals-algorithm","docId":"graph-theory/kruskals-algorithm"},{"type":"link","label":"Minimum Spanning Tree","href":"/leetcode-the-hard-way/tutorials/graph-theory/minimum-spanning-tree","docId":"graph-theory/minimum-spanning-tree"},{"type":"link","label":"Prim\'s Algorithm","href":"/leetcode-the-hard-way/tutorials/graph-theory/prims-algorithm","docId":"graph-theory/prims-algorithm"},{"type":"link","label":"Topological Sorting","href":"/leetcode-the-hard-way/tutorials/graph-theory/topological-sorting","docId":"graph-theory/topological-sorting"}],"href":"/leetcode-the-hard-way/tutorials/graph-theory/"},{"type":"category","label":"Math","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Number Theory","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Binary Exponentiation","href":"/leetcode-the-hard-way/tutorials/math/number-theory/binary-exponentiation","docId":"math/number-theory/binary-exponentiation"},{"type":"link","label":"Sieve of Eratosthenes","href":"/leetcode-the-hard-way/tutorials/math/number-theory/sieve-of-eratosthenes","docId":"math/number-theory/sieve-of-eratosthenes"}],"href":"/leetcode-the-hard-way/tutorials/math/number-theory/"}],"href":"/leetcode-the-hard-way/tutorials/math/"},{"type":"category","label":"String","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Booth\'s Algorithm","href":"/leetcode-the-hard-way/tutorials/strings/booths-algorithm","docId":"strings/booths-algorithm"},{"type":"link","label":"Manacher\'s Algorithm","href":"/leetcode-the-hard-way/tutorials/strings/manachers-algorithm","docId":"strings/manachers-algorithm"},{"type":"link","label":"Z Algorithm","href":"/leetcode-the-hard-way/tutorials/strings/z-algorithm","docId":"strings/z-algorithm"}],"href":"/leetcode-the-hard-way/tutorials/strings/"}]},"docs":{"basic-topics/arrays":{"id":"basic-topics/arrays","title":"Arrays","description":"Author: @heiheihang","sidebar":"tutorialSidebar"},"basic-topics/backtracking":{"id":"basic-topics/backtracking","title":"Backtracking","description":"Author: @wingkwong","sidebar":"tutorialSidebar"},"basic-topics/binary-search":{"id":"basic-topics/binary-search","title":"Binary Search","description":"Author: @heiheihang","sidebar":"tutorialSidebar"},"basic-topics/hash-map":{"id":"basic-topics/hash-map","title":"Hash Map","description":"Author:@heiheihang","sidebar":"tutorialSidebar"},"basic-topics/heap":{"id":"basic-topics/heap","title":"Heap","description":"Author: @heiheihang","sidebar":"tutorialSidebar"},"basic-topics/queue-and-stack":{"id":"basic-topics/queue-and-stack","title":"Queue & Stack","description":"Author:@heiheihang","sidebar":"tutorialSidebar"},"basic-topics/README":{"id":"basic-topics/README","title":"Basic Topics","description":"","sidebar":"tutorialSidebar"},"basic-topics/sliding-window":{"id":"basic-topics/sliding-window","title":"Sliding Window","description":"Author: @heiheihang","sidebar":"tutorialSidebar"},"basic-topics/sorting":{"id":"basic-topics/sorting","title":"Sorting","description":"Author: @wingkwong","sidebar":"tutorialSidebar"},"basic-topics/time-complexity":{"id":"basic-topics/time-complexity","title":"Time Complexity","description":"Author: @wingkwong","sidebar":"tutorialSidebar"},"basic-topics/trie":{"id":"basic-topics/trie","title":"Trie","description":"Author: @wingkwong","sidebar":"tutorialSidebar"},"basic-topics/two-pointers":{"id":"basic-topics/two-pointers","title":"Two Pointers","description":"Author: @heiheihang","sidebar":"tutorialSidebar"},"bit-masking":{"id":"bit-masking","title":"Bit Manipulation","description":"Author:","sidebar":"tutorialSidebar"},"dynamic-programming":{"id":"dynamic-programming","title":"Dynamic Programming","description":"Author:","sidebar":"tutorialSidebar"},"graph-theory/bellman-ford-algorithm":{"id":"graph-theory/bellman-ford-algorithm","title":"Bellman Ford Algorithm","description":"Tutorial: Coming Soon!","sidebar":"tutorialSidebar"},"graph-theory/binary-search-tree":{"id":"graph-theory/binary-search-tree","title":"Binary Search Tree","description":"Author:","sidebar":"tutorialSidebar"},"graph-theory/binary-tree":{"id":"graph-theory/binary-tree","title":"Binary Tree","description":"Author:","sidebar":"tutorialSidebar"},"graph-theory/breadth-first-search":{"id":"graph-theory/breadth-first-search","title":"Breadth First Search","description":"Author: @heiheihang","sidebar":"tutorialSidebar"},"graph-theory/depth-first-search":{"id":"graph-theory/depth-first-search","title":"Depth First Search","description":"Author: @heiheihang","sidebar":"tutorialSidebar"},"graph-theory/dijkstra":{"id":"graph-theory/dijkstra","title":"Dijkstra\'s Algorithm","description":"Author: @wingkwong","sidebar":"tutorialSidebar"},"graph-theory/disjoint-set":{"id":"graph-theory/disjoint-set","title":"Disjoint Set","description":"Tutorial: Coming Soon!","sidebar":"tutorialSidebar"},"graph-theory/introduction":{"id":"graph-theory/introduction","title":"Introduction","description":"Author: @heiheihang","sidebar":"tutorialSidebar"},"graph-theory/kahns-algorithm":{"id":"graph-theory/kahns-algorithm","title":"Kahn\'s Algorithm","description":"Tutorial: Coming Soon!","sidebar":"tutorialSidebar"},"graph-theory/kruskals-algorithm":{"id":"graph-theory/kruskals-algorithm","title":"Kruskal\'s Algorithm","description":"Tutorial: Coming Soon!","sidebar":"tutorialSidebar"},"graph-theory/minimum-spanning-tree":{"id":"graph-theory/minimum-spanning-tree","title":"Minimum Spanning Tree","description":"Author: @wingkwong","sidebar":"tutorialSidebar"},"graph-theory/prims-algorithm":{"id":"graph-theory/prims-algorithm","title":"Prim\'s Algorithm","description":"Tutorial: Coming Soon!","sidebar":"tutorialSidebar"},"graph-theory/README":{"id":"graph-theory/README","title":"Graph Theory","description":"","sidebar":"tutorialSidebar"},"graph-theory/topological-sorting":{"id":"graph-theory/topological-sorting","title":"Topological Sorting","description":"Author:","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Tutorials","description":"","sidebar":"tutorialSidebar"},"math/number-theory/binary-exponentiation":{"id":"math/number-theory/binary-exponentiation","title":"Binary Exponentiation","description":"Binary Exponentiation is also known as Exponentiation by Squaring or even called Fast Pow in some CP templates. It is used to calculate $$a ^ n$$ using only $$O(logn)$$ multiplications instead of $$O(n)$$using naive approach.","sidebar":"tutorialSidebar"},"math/number-theory/README":{"id":"math/number-theory/README","title":"Number Theory","description":"","sidebar":"tutorialSidebar"},"math/number-theory/sieve-of-eratosthenes":{"id":"math/number-theory/sieve-of-eratosthenes","title":"Sieve of Eratosthenes","description":"Author: @wingkwong","sidebar":"tutorialSidebar"},"math/README":{"id":"math/README","title":"Math","description":"","sidebar":"tutorialSidebar"},"strings/booths-algorithm":{"id":"strings/booths-algorithm","title":"Booth\'s Algorithm","description":"Author: @wingkwong","sidebar":"tutorialSidebar"},"strings/manachers-algorithm":{"id":"strings/manachers-algorithm","title":"Manacher\'s Algorithm","description":"Author: @wingkwong","sidebar":"tutorialSidebar"},"strings/README":{"id":"strings/README","title":"String","description":"","sidebar":"tutorialSidebar"},"strings/z-algorithm":{"id":"strings/z-algorithm","title":"Z Algorithm","description":"Author: @wingkwong","sidebar":"tutorialSidebar"}}}')}}]);