"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[9303],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=i,g=c["".concat(u,".").concat(d)]||c[d]||m[d]||a;return n?r.createElement(g,o(o({ref:t},s),{},{components:n})):r.createElement(g,o({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=c;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},64224:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],l={description:"Author: @TBC | https://leetcode.com/problems/distribute-repeating-integers/"},u="1655 - Distribute Repeating Integers (Hard)",p={unversionedId:"1600-1699/distribute-repeating-integers-hard",id:"1600-1699/distribute-repeating-integers-hard",title:"1655 - Distribute Repeating Integers (Hard)",description:"Author: @TBC | https://leetcode.com/problems/distribute-repeating-integers/",source:"@site/solutions/1600-1699/1655-distribute-repeating-integers-hard.md",sourceDirName:"1600-1699",slug:"/1600-1699/distribute-repeating-integers-hard",permalink:"/leetcode-the-hard-way/solutions/1600-1699/distribute-repeating-integers-hard",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/solutions/1600-1699/1655-distribute-repeating-integers-hard.md",tags:[],version:"current",sidebarPosition:1655,frontMatter:{description:"Author: @TBC | https://leetcode.com/problems/distribute-repeating-integers/"},sidebar:"tutorialSidebar",previous:{title:"1639 - Number of Ways to Form a Target String Given a Dictionary (Hard)",permalink:"/leetcode-the-hard-way/solutions/1600-1699/number-of-ways-to-form-a-target-string-given-a-dictionary-hard"},next:{title:"1672 - Richest Customer Wealth (Easy)",permalink:"/leetcode-the-hard-way/solutions/1600-1699/richest-customer-wealth-easy"}},s={},m=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: TBC",id:"approach-1-tbc",level:2}],c={toc:m};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"1655---distribute-repeating-integers-hard"},"1655 - Distribute Repeating Integers (Hard)"),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"You are given an array of ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," integers, ",(0,a.kt)("inlineCode",{parentName:"p"},"nums"),", where there are at most ",(0,a.kt)("inlineCode",{parentName:"p"},"50")," unique values in the array. You are also given an array of ",(0,a.kt)("inlineCode",{parentName:"p"},"m")," customer order quantities, ",(0,a.kt)("inlineCode",{parentName:"p"},"quantity"),", where ",(0,a.kt)("inlineCode",{parentName:"p"},"quantity[i]")," is the amount of integers the ",(0,a.kt)("inlineCode",{parentName:"p"},"ith")," customer ordered. Determine if it is possible to distribute ",(0,a.kt)("inlineCode",{parentName:"p"},"nums")," such that:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"ith")," customer gets ",(0,a.kt)("strong",{parentName:"li"},"exactly")," ",(0,a.kt)("inlineCode",{parentName:"li"},"quantity[i]")," integers,"),(0,a.kt)("li",{parentName:"ul"},"The integers the ",(0,a.kt)("inlineCode",{parentName:"li"},"ith")," customer gets are ",(0,a.kt)("strong",{parentName:"li"},"all equal"),", and"),(0,a.kt)("li",{parentName:"ul"},"Every customer is satisfied.")),(0,a.kt)("p",null,"Return ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," ",(0,a.kt)("em",{parentName:"p"},"if it is possible to distribute")," ",(0,a.kt)("inlineCode",{parentName:"p"},"nums")," ",(0,a.kt)("em",{parentName:"p"},"according to the above conditions"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [1,2,3,4], quantity = [2]\nOutput: false\nExplanation: The 0th customer cannot be given two different integers.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [1,2,3,3], quantity = [2]\nOutput: true\nExplanation: The 0th customer is given [3,3]. The integers [1,2] are not used.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 3:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [1,1,2,2], quantity = [2,2]\nOutput: true\nExplanation: The 0th customer is given [1,1], and the 1st customer is given [2,2].\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"n == nums.length")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= n <= 10^5")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= nums[i] <= 1000")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"m == quantity.length")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= m <= 10")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= quantity[i] <= 10^5")),(0,a.kt)("li",{parentName:"ul"},"There are at most ",(0,a.kt)("inlineCode",{parentName:"li"},"50")," unique values in ",(0,a.kt)("inlineCode",{parentName:"li"},"nums"),".")),(0,a.kt)("h2",{id:"approach-1-tbc"},"Approach 1: TBC"))}d.isMDXComponent=!0}}]);